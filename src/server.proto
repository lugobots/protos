syntax = "proto3";

import "physics.proto";

package lugo;

option go_package = "github.com/lugobots/lugo4go/proto";

service Game {
  rpc JoinATeam (JoinRequest) returns (stream GameSnapshot);
  rpc SendOrders (OrderSet) returns (OrderResponse);
}

message JoinRequest {
  string token = 1;
  string protocol_version = 2;
  Team.Side team_side = 3;
  uint32 number = 4;
  Point init_position = 5;
}

message GameSnapshot {
  enum State {
    WAITING = 0;
    GET_READY = 1;
    LISTENING = 2;
    PLAYING = 3;
    SHIFTING = 4;
    OVER = 99;
  }
  State state = 1;
  uint32 turn = 2;
  Team home_team = 3;
  Team away_team = 4;
  Ball ball = 5;
  uint32 turns_ball_in_goal_zone = 6;
  ShotClock shot_clock = 7;
}

message Team {
  repeated Player players = 1;
  string name = 2;
  uint32 score = 3;
  enum Side {
    HOME = 0;
    AWAY = 1;
  }
  Side side = 4;
}

message ShotClock {
  Team.Side team_side = 6;
  uint32 remaining_turns = 7;
}

message Player {
  uint32 number = 1;
  Point position = 2;
  Velocity velocity = 3;
  Team.Side team_side = 4;
  Point init_position = 5;
  // indicates the the player is jumping (goalkeepers only)
  bool is_jumping = 6;
}

message Ball {
  Point position = 1;
  Velocity velocity = 2;
  Player holder = 3;
}

message OrderResponse {
  enum StatusCode {
    SUCCESS = 0;
    UNKNOWN_PLAYER = 1;
    NOT_LISTENING = 2;
    WRONG_TURN = 3;
    OTHER = 99;
  }
  StatusCode code = 1;
  string details = 2;
}

message OrderSet {
  uint32 turn = 1;
  repeated Order orders = 2;
  string debug_message = 3;
}

message Order {
  oneof action {
    Move move = 1;
    Catch catch = 2;
    Kick kick = 3;
    Jump jump = 4;
  }
}

message Move {
  Velocity velocity = 1;
}

message Catch {

}

message Kick {
  Velocity velocity = 1;
}

message Jump {
  Velocity velocity = 1;
}
